FROM alpine:edge AS stage1

RUN apk add --no-cache libcap-static libpcap-dev linux-headers git go file dpkg rpm --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/

RUN mkdir /app && mkdir /release

WORKDIR /app
COPY ./dump2poip /app/

RUN go build --ldflags "-L /usr/lib/libcap.a -linkmode external -extldflags \"-static\"" -o /release/dump2poip .

FROM mcr.microsoft.com/dotnet/runtime:8.0

RUN apt update && apt install -y curl unzip iproute2 tcpdump netcat-openbsd && apt clean

RUN groupadd -g 31337 polarproxy && useradd -m -u 31337 -g polarproxy polarproxy && \
    mkdir -p /var/log/PolarProxy /opt/polarproxy && chown polarproxy:polarproxy /var/log/PolarProxy && \
    curl https://www.netresec.com/?download=PolarProxy | tar -xzf - -C /opt/polarproxy

# install tun2socks for upstream 
RUN mkdir /opt/tun2socks && cd /opt/tun2socks/ && \
    curl -L -o tun2socks-linux-amd64.zip "https://github.com/xjasonlyu/tun2socks/releases/download/v2.5.2/tun2socks-linux-amd64.zip" && \
    unzip tun2socks-linux-amd64.zip && rm tun2socks-linux-amd64.zip

# copy dump2poip to /opt/polarproxy
COPY --from=stage1 /release/dump2poip /opt/polarproxy/dump2poip

# coredns
RUN  curl -L https://github.com/coredns/coredns/releases/download/v1.11.1/coredns_1.11.1_linux_amd64.tgz | tar -xzf - > /coredns
RUN echo '\
.:5353 { \n\
     forwrad . udp://torwithsnowflake \n\
}       \n\
' > /corefile

RUN echo '\
set -x  \n\
ip tuntap add mode tun dev tun0 \n\
ip addr add 100.100.100.100/32 dev tun0 \n\
ip link set dev tun0 up \n\
ip route del default \n\
ip route add default dev tun0 \n\
sleep 1 \n\
/opt/tun2socks/tun2socks-linux-amd64 -device tun0 -proxy $EGRESS_PROXY & \n\
/opt/polarproxy/dump2poip -be -i tun0 -o $ARKIME_POIP & \n\
cd /opt/polarproxy && dotnet PolarProxy.dll $POLARPROXY_ARG & \n\
/coredns -conf=/corefile & \n\
' > /init && chmod +x /init

ENV TINI_VERSION v0.19.0
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini
RUN chmod +x /tini
ENTRYPOINT ["/tini", "--"]

CMD ["/bin/sh", "/init"]
